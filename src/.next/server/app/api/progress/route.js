"use strict";(()=>{var e={};e.id=4153,e.ids=[4153],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},71114:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>g,originalPathname:()=>w,patchFetch:()=>D,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>I});var a={};r.r(a),r.d(a,{GET:()=>u,dynamic:()=>p,runtime:()=>l});var s=r(6170),n=r(8533),i=r(54387),o=r(40064);!function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}();let l="nodejs",p="force-dynamic";async function u(e){try{let{searchParams:t}=new URL(e.url),r=t.get("players")?.split(",")||[],a=t.get("timeRange")||"30",s=parseInt(t.get("limit")||"50");if(0===r.length)return o.Z.json({error:"No players specified"},{status:400});let n=new Date,i=new Date;i.setDate(i.getDate()-parseInt(a));let l=(await Promise.all(r.map(async e=>{let t=await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).player.findUnique({where:{lordId:e},include:{snapshots:{include:{snapshot:!0},where:{snapshot:{timestamp:{gte:i,lte:n}}},orderBy:{snapshot:{timestamp:"asc"}},take:s}}});if(!t)return null;let r=t.snapshots;if(r.length<2)return{player:{lordId:t.lordId,currentName:t.currentName},snapshots:[],metrics:null};let a=r[0],o=r[r.length-1],l=parseInt(o.currentPower)-parseInt(a.currentPower),p=parseInt(o.unitsKilled)-parseInt(a.unitsKilled),u=parseInt(o.unitsDead)-parseInt(a.unitsDead),d=parseInt(o.merits)-parseInt(a.merits),c=(new Date(o.snapshot.timestamp).getTime()-new Date(a.snapshot.timestamp).getTime())/864e5,m={powerGrowth:l,killsGrowth:p,deathsGrowth:u,meritsGrowth:d,averageDailyPowerGrowth:c>0?Math.round(l/c):0,killDeathRatio:parseInt(o.unitsDead)>0?(parseInt(o.unitsKilled)/parseInt(o.unitsDead)).toFixed(2):"N/A",totalDays:Math.round(c),currentPower:parseInt(o.currentPower),currentKills:parseInt(o.unitsKilled),currentDeaths:parseInt(o.unitsDead),currentMerits:parseInt(o.merits)};return{player:{lordId:t.lordId,currentName:t.currentName},snapshots:r.map(e=>({timestamp:e.snapshot.timestamp,currentPower:parseInt(e.currentPower),unitsKilled:parseInt(e.unitsKilled),unitsDead:parseInt(e.unitsDead),merits:parseInt(e.merits),allianceTag:e.allianceTag,cityLevel:e.cityLevel,victories:e.victories,defeats:e.defeats})),metrics:m}}))).filter(e=>null!==e);return o.Z.json({timeRange:parseInt(a),players:l})}catch(e){return console.error("Error fetching progress data:",e),o.Z.json({error:"Failed to fetch progress data"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/progress/route",pathname:"/api/progress",filename:"route",bundlePath:"app/api/progress/route"},resolvedPagePath:"/Users/ciaranobrien/player-tracker/src/app/api/progress/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:h,headerHooks:g,staticGenerationBailout:I}=d,w="/api/progress/route";function D(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[3499,7386],()=>r(71114));module.exports=a})();