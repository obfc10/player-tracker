"use strict";(()=>{var e={};e.id=324,e.ids=[324],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},18599:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>x,originalPathname:()=>v,patchFetch:()=>q,requestAsyncStorage:()=>f,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>O,staticGenerationBailout:()=>D});var n={};t.r(n),t.d(n,{GET:()=>l,POST:()=>p,dynamic:()=>d,runtime:()=>c});var s=t(6170),o=t(8533),a=t(54387),i=t(40064),u=t(16395);(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e})(),function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}();let c="nodejs",d="force-dynamic";async function l(e){try{let e=await (0,u.getServerSession)(Object(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}()));if(!e||"ADMIN"!==e.user.role)return i.Z.json({error:"Admin access required"},{status:403});let r=(await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).season.findMany({include:{_count:{select:{snapshots:!0}}},orderBy:{startDate:"desc"}})).map(e=>({id:e.id,name:e.name,startDate:e.startDate,endDate:e.endDate,isActive:e.isActive,description:e.description,snapshotCount:e._count.snapshots,createdAt:e.createdAt}));return i.Z.json({seasons:r})}catch(e){return console.error("Error fetching seasons:",e),i.Z.json({error:"Internal server error"},{status:500})}}async function p(e){try{let r=await (0,u.getServerSession)(Object(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}()));if(!r||"ADMIN"!==r.user.role)return i.Z.json({error:"Admin access required"},{status:403});let{name:t,startDate:n,endDate:s,description:o}=await e.json();if(!t||!n)return i.Z.json({error:"Season name and start date are required"},{status:400});if(await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).season.findUnique({where:{name:t}}))return i.Z.json({error:"Season name already exists"},{status:400});let a=await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).season.create({data:{name:t,startDate:new Date(n),endDate:s?new Date(s):null,description:o||null,isActive:!1}});return i.Z.json({success:!0,season:a,message:"Season created successfully"})}catch(e){return console.error("Error creating season:",e),i.Z.json({error:"Internal server error"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/seasons/route",pathname:"/api/admin/seasons",filename:"route",bundlePath:"app/api/admin/seasons/route"},resolvedPagePath:"/Users/ciaranobrien/player-tracker/src/app/api/admin/seasons/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:f,staticGenerationAsyncStorage:O,serverHooks:h,headerHooks:x,staticGenerationBailout:D}=m,v="/api/admin/seasons/route";function q(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:O})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[3499,7386,6395],()=>t(18599));module.exports=n})();