"use strict";(()=>{var e={};e.id=1356,e.ids=[1356],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},92446:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>f,originalPathname:()=>y,patchFetch:()=>g,requestAsyncStorage:()=>p,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>w,staticGenerationBailout:()=>O});var i={};r.r(i),r.d(i,{GET:()=>u,dynamic:()=>d,runtime:()=>c});var n=r(6170),a=r(8533),o=r(54387),s=r(40064),l=r(16395);(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e})(),function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}();let c="nodejs",d="force-dynamic";async function u(e){try{if(!await (0,l.getServerSession)(Object(function(){var e=Error("Cannot find module '@/lib/auth'");throw e.code="MODULE_NOT_FOUND",e}())))return s.Z.json({error:"Unauthorized"},{status:401});let{searchParams:t}=new URL(e.url),r=t.get("timeframe")||"current",i=t.get("seasonMode")||"current",n=t.get("seasonId"),a={};if("current"===i||"specific"===i){let e="specific"===i&&n?n:(await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).season.findFirst({where:{isActive:!0}}))?.id;e&&(a.seasonId=e)}let o=await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).snapshot.findFirst({where:a,orderBy:{timestamp:"desc"}});if(!o)return s.Z.json({error:"No snapshots found"},{status:404});let c={snapshotId:o.id},d=null;if("week"===r){let e=new Date(o.timestamp.getTime()-6048e5);d=await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).snapshot.findFirst({where:{...a,timestamp:{lte:e}},orderBy:{timestamp:"desc"}})}else if("month"===r){let e=new Date(o.timestamp.getTime()-2592e6);d=await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).snapshot.findFirst({where:{...a,timestamp:{lte:e}},orderBy:{timestamp:"desc"}})}let u=(await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).playerSnapshot.findMany({where:c,include:{player:{select:{lordId:!0,currentName:!0}}}})).map(e=>{let t=parseInt(e.merits||"0"),r=parseInt(e.currentPower||"0"),i=parseInt(e.unitsKilled||"0");return{playerId:e.playerId,name:e.name,currentName:e.player.currentName,allianceTag:e.allianceTag,division:e.division||0,cityLevel:e.cityLevel||0,merits:e.merits,currentPower:e.currentPower,unitsKilled:e.unitsKilled,meritPowerRatio:r>0?Math.min(t/r*100,999999):0,meritKillRatio:i>0?Math.min(t/i,999999):0,meritPerCityLevel:(e.cityLevel||0)>0?Math.min(t/(e.cityLevel||1),999999):0,rawMerits:t,rawPower:r,rawKills:i}}),m=u;if(d){let e=await Object(function(){var e=Error("Cannot find module '@/lib/db'");throw e.code="MODULE_NOT_FOUND",e}()).playerSnapshot.findMany({where:{snapshotId:d.id},select:{playerId:!0,merits:!0}}),t=new Map(e.map(e=>[e.playerId,parseInt(e.merits||"0")]));m=u.map(e=>{let r=t.get(e.playerId)||0,i=e.rawMerits-r,n=r>0?i/r*100:0;return(!isFinite(n)||isNaN(n))&&(n=0),{...e,meritGrowth:i,meritGrowthPercent:n}})}let p=[...m].sort((e,t)=>t.rawMerits-e.rawMerits).slice(0,50),w=[...m].filter(e=>e.rawPower>=1e6).sort((e,t)=>t.meritPowerRatio-e.meritPowerRatio).slice(0,50),h=[...m].filter(e=>e.rawKills>0).sort((e,t)=>t.meritKillRatio-e.meritKillRatio).slice(0,50),f="current"!==r?[...m].filter(e=>void 0!==e.meritGrowth&&e.meritGrowth>0).sort((e,t)=>(t.meritGrowth||0)-(e.meritGrowth||0)).slice(0,50):[],O=u.reduce((e,t)=>e+t.rawMerits,0),y=u.length>0?O/u.length:0,g=u.filter(e=>e.rawPower>=1e6),v=g.length>0?g.reduce((e,t)=>e+t.meritPowerRatio,0)/g.length:0;return s.Z.json({topMerits:p,topEfficiency:w,topKillEfficiency:h,topGrowth:f,kingdomStats:{totalMerits:O.toString(),averageMerits:Math.round(y),averageEfficiency:v,totalPlayers:u.length},timeframe:"current"===r?`Current (${o?.timestamp?.toISOString().split("T")[0]||"Unknown"})`:"week"===r?"Past 7 Days":"Past 30 Days"})}catch(e){return console.error("Error fetching merit data:",e),s.Z.json({error:"Failed to fetch merit analytics"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/merits/route",pathname:"/api/merits",filename:"route",bundlePath:"app/api/merits/route"},resolvedPagePath:"/Users/ciaranobrien/player-tracker/src/app/api/merits/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:p,staticGenerationAsyncStorage:w,serverHooks:h,headerHooks:f,staticGenerationBailout:O}=m,y="/api/merits/route";function g(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:w})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[3499,7386,6395],()=>r(92446));module.exports=i})();